// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: com/apexnova/services/sample/sample.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.apexnova.services.sample;

@kotlin.jvm.JvmName("-initializesampleRequest")
public inline fun sampleRequest(block: com.apexnova.services.sample.SampleRequestKt.Dsl.() -> kotlin.Unit): com.apexnova.services.sample.SampleRequest =
  com.apexnova.services.sample.SampleRequestKt.Dsl._create(com.apexnova.services.sample.SampleRequest.newBuilder()).apply { block() }._build()
/**
 * ```
 * The request message containing the user's sample.
 * ```
 *
 * Protobuf type `sample.SampleRequest`
 */
public object SampleRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.apexnova.services.sample.SampleRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.apexnova.services.sample.SampleRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.apexnova.services.sample.SampleRequest = _builder.build()

    /**
     * `string sample = 1;`
     */
    public var sample: kotlin.String
      @JvmName("getSample")
      get() = _builder.getSample()
      @JvmName("setSample")
      set(value) {
        _builder.setSample(value)
      }
    /**
     * `string sample = 1;`
     */
    public fun clearSample() {
      _builder.clearSample()
    }
  }
}
public inline fun com.apexnova.services.sample.SampleRequest.copy(block: `com.apexnova.services.sample`.SampleRequestKt.Dsl.() -> kotlin.Unit): com.apexnova.services.sample.SampleRequest =
  `com.apexnova.services.sample`.SampleRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

