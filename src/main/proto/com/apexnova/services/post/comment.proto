syntax = "proto3";

package post;

option java_package = "com.apexnova.services.post";
option java_multiple_files = true;
option java_outer_classname = "CommentProto";

message Comment {
  string id = 1;
  string content = 2;
  string author_id = 3;  // This should match a User.id
  string article_id = 4; // This should match an Article.id
}

service CommentService {
  // Retrieves a Comment by its id
  rpc GetComment(GetCommentRequest) returns (Comment) {}

  // Creates a new Comment
  rpc CreateComment(CreateCommentRequest) returns (Comment) {}

  // Updates an existing Comment
  rpc UpdateComment(UpdateCommentRequest) returns (Comment) {}

  // Deletes a Comment
  rpc DeleteComment(DeleteCommentRequest) returns (DeleteCommentResponse) {}

  // Server-side streaming RPC for getting multiple comments
  rpc GetCommentsStream(GetCommentsStreamRequest) returns (stream Comment) {}

  // Client-side streaming RPC for creating multiple comments
  rpc CreateCommentsStream(stream CreateCommentRequest)
      returns (CreateCommentsStreamResponse) {}

  // Server-side streaming RPC for searching comments
  rpc SearchCommentsStream(SearchCommentsRequest) returns (stream Comment) {}
}

// Request message for GetComment
message GetCommentRequest {
  string id = 1; // id of the Comment to retrieve
}

// Request message for CreateComment
message CreateCommentRequest {
  string content = 1;    // content of the Comment to create
  string author_id = 2;  // author_id of the Comment to create
  string article_id = 3; // article_id of the Comment to create
}

// Request message for UpdateComment
message UpdateCommentRequest {
  Comment comment = 1; // Comment to update
}

// Request message for DeleteComment
message DeleteCommentRequest {
  string id = 1; // id of the Comment to delete
}

// Response message for DeleteComment
message DeleteCommentResponse {
  string id = 1; // id of the deleted Comment
}

// Request message for SearchComments
message SearchCommentsRequest {
  string query = 1; // search query
}

// Request message for GetCommentsStream
message GetCommentsStreamRequest {
  repeated string ids = 1; // ids of the Comments to retrieve
}

// Response message for CreateCommentsStream
message CreateCommentsStreamResponse {
  repeated string ids = 1; // ids of the created Comments
}